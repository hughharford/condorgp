services:

  cgp_worker_1:
    container_name: cgp_worker_1
    image: ghcr.io/nautechsystems/nautilus_trader:latest
    ports:
      - 8227:8227
    # environment:
    volumes:
      - ../cgp_rabbitmq:/cgp_rabbitmq
    command: ["python", "cgp_rabbitmq.delegate.run_delegated_evals_1:main"]
    networks:
      - cgp_net

  # cgp_api:
  #   container_name: fastapi_cgp_api
  #   image: api_runtime
  #   restart: on-failure
  #   ports:
  #     - 8000:8000
  #   environment:
  #     - POSTGRES_DATABASE_URL=postgresql+psycopg2://cgp:cgp_pass@cgp_database:5432/cgp_backbone
  #     - COMMS_TABLE=comms
  #   volumes:
  #     - ../cgp_api:/cgp_api
  #   command: ["uvicorn", "cgp_api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
  #   depends_on:
  #     - cgp_database
  #   networks:
  #     - cgp_net

  # rabbitmq:
  #   image: rabbitmq:3.13-management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   environment:
  #     RABBITMQ_DEFAULT_USER: "guest"
  #     RABBITMQ_DEFAULT_PASS: "guest"
  #   networks:
  #     - cgp_net

  # cgp_grafana:
  #   image: grafana/grafana-enterprise
  #   container_name: ${GRAF_NAME}
  #   restart: unless-stopped
  #   ports:
  #    - 3000:3000
  #   environment:
  #     POSTGRES_DATABASE_URL: postgresql+psycopg2://cgp:cgp_pass@cgp_database:5432/cgp_backbone
  #     GF_SECURITY_ADMIN_USER: "admin"
  #   env_file:
  #   - ../.env
  #   user: '0'
  #   volumes:
  #     - ../grafana_data:/var/lib/grafana
  #   depends_on:
  #     - cgp_database
  #   networks:
  #     - cgp_net

  # cgp_database:
  #   image: postgres:14.2
  #   restart: on-failure
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - ../scripts/db_init/:/docker-entrypoint-initdb.d/
  #     - ../database/:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - APP_DB_USER=cgp
  #     - APP_DB_PASS=cgp_pass
  #     - APP_DB_NAME=cgp_backbone
  #   networks:
  #     - cgp_net

networks:
  cgp_net:
    driver: bridge

# volumes:
#   grafana-storage: {}
