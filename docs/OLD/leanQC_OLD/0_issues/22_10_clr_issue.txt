INITIAL ISSUE:
          ModuleNotFoundError: No module named 'clr'

See trace:

Traceback (most recent call last):
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_advanced_con.py", line 1, in <module>
    from gp_control import GpControl
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_control.py", line 3, in <module>
    from condorgp.factories.initial_factory import InitialFactory
  File "/home/hsth/code/hughharford/condorgp/condorgp/factories/initial_factory.py", line 3, in <module>
    from condorgp.gp.gp_psets import GpPsets
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_psets.py", line 10, in <module>
    from QuantConnect.Algorithm.Framework.Alphas import *
  File "/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/QuantConnect/__init__.py", line 27, in <module>
    from clr import AddReference
ModuleNotFoundError: No module named 'clr'

after installing mono and pythonnet (see requirements.txt)
and
#                       export PYTHONNET_PYDLL=libpython3.8.so

This worked, briefly, and got the error below...

Things done that might have changed things...(!)
*******************************************************************************************************************************

ALL IN LEAN FOLDER:
    git pull

    sudo dotnet build QuantConnect.Lean.sln

cd Launcher/bin/Debug                                               [üêç lewagon]
    dotnet QuantConnect.Lean.Launcher.dll


TRYING PREVIOUS STEPS TO OVERWRITE THE STEPS ABOVE

pip install lean

NOTE: version: Python 3.8.12

Cannot find libpython3.8.so
  whereis python3.8.12

/home/hsth/.pyenv/shims/python3.8
/usr/bin/python3.8
/bin/python3.8

*************
NEED TO SET PYTHONNET_PYDLL CORRECTLY
*************
trying:
      export PYTHONNET_PYDLL=/home/hsth/.pyenv/versions/3.8.12/lib/python3.8
      - obviously, this didn't work...!

      CORRECT PATH:
      export PYTHONNET_PYDLL=/usr/lib/python3.8/config-3.8-x86_64-linux-gnu/libpython3.8.so
        didn't work either
        tried added the above path to the sys.path - but no...
        trying copying in the .so into (there are a few other .so files):
                              /home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages
        NOPE...

      Going to try establishing:
          a) what the .sln build did
          b) how to confirm pythonnet is correctly set up

      b)
        The pythonnet site recommends running a .cs file, i've saved as
            leanQC/0_issues/sample.cs
            this should do some simple maths using Python
            # Trying with
                        dotnet leanQC/0_issues/sample.cs
                this didn't immediately work

              dotnet --list-runtimes does not list a python runtime


      TRYING A hello world C# app run via VS code
      *******************************************
      DOTNET_ROOT not set, according to Omnisharp C# extension

      trying: - based on
        terminal command:
                        dotnet --list-sdks
        Omnisharp: Sdk Path
                            /snap/dotnet-sdk/183/shared/
        Omnisharp: Sdk Version
                            6.0.402

      DOTNET_ROOT
        export DOTNET_ROOT=/snap/dotnet-sdk/183/sdk/
        echo $PATH then shows the above

      &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
        MIGHT HAVE WORKED
      &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&

        Debug Console now reads the "hello world ____ 2" as expected

        scriptcs basic run (CTRL+ALT+N) still fails, it's not installed after all

        GOING BACK TO condorgp:
            still getting:
                  ModuleNotFoundError: No module named 'clr'
            even after
            sys.path includes: (added programatically by utils.py)
                        Common_bin_Debug = '/home/hsth/code/hughharford/Lean/Common/bin/Debug/'
                        Linux_config_3_8 = '/usr/lib/python3.8/config-3.8-x86_64-linux-gnu/'
                        snap_dotnet_sdk_183 = '/snap/dotnet-sdk/183/shared/'
              ls says this path doesn't exist...
                  /usr/lib/python3.8/config-3.8-x86_64-linux-gnu/libpython3.8.so
                  looking in the folder, the .so is no longer there...
                  trying the .a
                  /usr/lib/python3.8/config-3.8-x86_64-linux-gnu/libpython3.8.a
            export PYTHONNET_PYDLL=/usr/lib/python3.8/config-3.8-x86_64-linux-gnu/libpython3.8.a

        Confirming shared runtime library installed:
              sudo apt-get install libpython3.8
              reads:
                    libpython3.8 is already the newest version (3.8.10-0ubuntu1~20.04.5).
                    libpython3.8 set to manually installed.
                    0 to upgrade, 0 to newly install, 0 to remove and 0 not to upgrade.

        Maybe this would work....
                    "You need to configure Python with --enable-shared."
              from ref: https://github.com/rstudio/reticulate/issues/615
                    which is pretty detailed! but talks about no .so only .a

        configuring Python with --enable-shared:
        see REFS:
            http://cdsarc.u-strasbg.fr/doc/man/gildas/html/gildas-python-html/node36.html
              has instructions
            https://linuxtut.com/en/bf0b74550bee125cdea4/
              has some notes, warnings etc

          The way to do it is:
              cd Python-2.7 (to our folder...)
              ./configure --enable-shared [--prefix=/your/custom/installation/path]
              make
              make test
              make install

          CUSTOM INSTALL OF PYTHON 3.8
              @ /home/hsth/python38shared_install/

              NOTE: test_gdb failed...

              .so for python3.8:
              @ /home/hsth/python38shared_install/lib/libpython3.8.so

          export PYTHONNET_PYDLL=/home/hsth/python38shared_install/lib/libpython3.8.so

        This didn't make any difference...
        BUT, adding back in the Lean/Common/bin/Debug path back in did
        Then also
        Add back in the isite-packages so it can reach clr_loader

        ### hsth additions 17 10 22 - keeping track here
        # LINE 25 in __init__.py
              /home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/QuantConnect/__init__.py

        Common_bin_Debug = '/home/hsth/code/hughharford/Lean/Common/bin/Debug/'
        clr_loader_path = '/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages'
        sys.path.append(Common_bin_Debug)
        sys.path.append(clr_loader_path)

        Pythonnet then seems to have a problem

            func = _LOADER_ASSEMBLY["Python.Runtime.Loader.Initialize"]
            TypeError: 'Assembly' object is not subscriptable

        Trying:
          https://github.com/r0x0r/pywebview/issues/952
          setting specific versions of pythonnet and clr_loader...
        pythonnet 3.1.0.dev0 - removed this
        and
        Successfully uninstalled clr-loader-0.2.3

        Installed:
            Successfully installed pythonnet-3.0.0a2
            &
            Successfully installed clr-loader-0.1.7

        Moved onto the next issue...
        Actually back, now having trouble loading with clr-loader

                  from clr import AddReference
        File "/home/hsth/code/hughharford/Lean/Common/bin/Debug/clr.py", line 6, in <module>
          load()
        File "/home/hsth/code/hughharford/Lean/Common/bin/Debug/pythonnet/__init__.py", line 43, in load
          if func(b"") != 0:
        File "/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/clr_loader/wrappers.py", line 20, in __call__
          return self._callable(ffi.cast("void*", buf_arr), len(buf_arr))
        File "/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/clr_loader/mono.py", line 92, in __call__
          _check_result(res, "Failed to call method")
        File "/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/clr_loader/mono.py", line 145, in _check_result
          raise RuntimeError(msg)
      RuntimeError: Failed to call method

      @ HERE - that didn't do it, so back to previous versions
        pythonnet 3.1.0.dev0
        clr-loader-0.2.4 (was 0.2.3 before...)

      @ ANOTHER POSSIBILITY 22 10 17:
      Noticed Lean/Common/bin/Debug has the following:
        /home/hsth/code/hughharford/Lean/Common/bin/Debug/pythonnet/runtime/Python.Runtime.dll

      So try pointing PYTHONNET_PYDLL at that...
        export PYTHONNET_PYDLL=/home/hsth/code/hughharford/Lean/Common/bin/Debug/pythonnet/runtime/Python.Runtime.dll

        NOPE

      @ NEW POSSIBILITY 22 10 17:
        Note here (https://github.com/QuantConnect/Lean/tree/master/Algorithm.Python)
          that there is an advanced pythonnet from QuantConnect
          see:
              https://github.com/QuantConnect/pythonnet/

          Trying this:
              Successfully installed pythonnet-3.0.0.dev1

          Result
              No difference

      @ ###################### ###################### #########################
      @ TRYING TO PREVENT THE usage of Pythonnet entirely
          C# projects need pythonnet etc, but this project is already in Python
          So, essentially, have been trying it all the wrong way around...
      @ ###################### ###################### #########################

        # So trying:
            Commenting out __init__
                /home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/...
                  .../python3.8/site-packages/QuantConnect/__init__.py
                  .../python3.8/site-packages/QuantConnect/Algorithm/__init__.py
                  .../python3.8/site-packages/QuantConnect/Algorithm/Framework/__init__.py
                  .../python3.8/site-packages/QuantConnect/Algorithm/Framework/Alphas/__init__.py
                No dice
            Uninstalled quantconnect_stubs (renamed the folder in site packages...)
        # Working step by step to reinstate imports...

          Starting with:

            from AlgorithmImports import *
                which invokes .../python3.8/site-packages/AlgorithmImports/__init__.pyi
                but doesn't complain.
                this __init__.py has a different setup to the others commented out above

            anything more than the above (via quantconnect_stubs) doesn't work.

          have also tried their python instructions:
              https://github.com/QuantConnect/Lean/blob/master/Algorithm.Python/readme.md

          

TO SEE THE SYSPATH:
**************************************
python -c "import sys; print(sys.path)"

POSSIBLE WAYS FORWARD:

  https://stackoverflow.com/questions/48230027/unable-to-restore-nuget-packages-on-vs17-and-vs15/48258151#48258151
This shows the line:
  >     2>CSC : error CS0006: Metadata file 'C:\Users\Work\QuantConnect\Lean-master\Common\bin\Debug\QuantConnect.Common.dll'

THEREFORE...?
QuantConnect\Lean-master\packages is missing

Lean/Common/obj/Debug/QuantConnect.Common.dll'

FOUND DLL: and all sorts of other bits at:
/home/hsth/code/hughharford/Lean/Common/bin/Debug

CONSIDER THEREFORE, ADDING THE FOLLOWING TO THE PYTHONPATH:
/home/hsth/code/hughharford/Lean/Common/bin/Debug

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

      Adding the above path to the sys.path seemed to ruin the above step

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

/home/hsth/code/hughharford/condorgp/condorgp/util
/home/hsth/code/hughharford/data-challenges/04-Decision-Science
/home/hsth/code/hughharford/condorgp
/home/hsth/.pyenv/versions/3.8.12/lib/python38.zip
/home/hsth/.pyenv/versions/3.8.12/lib/python3.8
/home/hsth/.pyenv/versions/3.8.12/lib/python3.8/lib-dynload
/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages
/home/hsth/code/hughharford/mlproject
/home/hsth/code/hughharford/TFM_scaleGCP
/home/hsth/code/hughharford/smr
/home/hsth/code/hughharford/util_funcs
/home/hsth/code/hughharford/lwb_smr
/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/deap-1.3.3-py3.8-linux-x86_64.egg



ERROR TRACE BELOW:

HIGHLIGHT:
    AddReference("QuantConnect.Common")
System.IO.FileNotFoundException: Could not load the file 'QuantConnect.Common'.
File name: 'QuantConnect.Common'


Traceback (most recent call last):
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_advanced_con.py", line 1, in <module>
    from gp_control import GpControl
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_control.py", line 3, in <module>
    from condorgp.factories.initial_factory import InitialFactory
  File "/home/hsth/code/hughharford/condorgp/condorgp/factories/initial_factory.py", line 3, in <module>
    from condorgp.gp.gp_psets import GpPsets
  File "/home/hsth/code/hughharford/condorgp/condorgp/gp/gp_psets.py", line 10, in <module>
    from QuantConnect.Algorithm.Framework.Alphas import *
  File "/home/hsth/.pyenv/versions/3.8.12/envs/lewagon/lib/python3.8/site-packages/QuantConnect/__init__.py", line 28, in <module>
    AddReference("QuantConnect.Common")
System.IO.FileNotFoundException: Could not load the file 'QuantConnect.Common'.
File name: 'QuantConnect.Common'
  at System.AppDomain.Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity) [0x0007a] in <de882a77e7c14f8ba5d298093dde82b2>:0
  at (wrapper remoting-invoke-with-check) System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  at System.AppDomain.Load (System.Reflection.AssemblyName assemblyRef) [0x00000] in <de882a77e7c14f8ba5d298093dde82b2>:0
  at (wrapper remoting-invoke-with-check) System.AppDomain.Load(System.Reflection.AssemblyName)
  at System.Reflection.Assembly.Load (System.Reflection.AssemblyName assemblyRef) [0x00005] in <de882a77e7c14f8ba5d298093dde82b2>:0
  at Python.Runtime.AssemblyManager.LoadAssembly (System.Reflection.AssemblyName name) [0x00000] in <5af7325af00a4606830af952d4178e2b>:0
  at Python.Runtime.CLRModule.AddReference (System.String name) [0x00035] in <5af7325af00a4606830af952d4178e2b>:0
  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)
  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in <de882a77e7c14f8ba5d298093dde82b2>:0
